name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install project (core + dev)
        run: |
          pip install --upgrade pip
          pip install .[dev,security]
          pip install build
          # Optional: warm caches for ruff/mypy if needed later

      - name: Cache mypy
        uses: actions/cache@v4
        with:
            path: .mypy_cache
            key: mypy-${{ runner.os }}-${{ hashFiles('**/*.py') }}
            restore-keys: |
              mypy-${{ runner.os }}-

      - name: Lint (ruff)
        run: |
          ruff check .

      - name: Type check (mypy)
        run: |
          mypy --install-types --non-interactive .

      - name: Run tests with coverage
        env:
          PYTHONWARNINGS: ignore::DeprecationWarning:scipy.sparse.linalg
        run: |
          pytest -q --cov=./ --cov-report=xml --cov-report=term --maxfail=1 --cov-fail-under=85
      - name: Enforce coverage threshold
        shell: bash
        run: |
          python - <<'PY'
            import xml.etree.ElementTree as ET, sys
            root = ET.parse('coverage.xml').getroot()
            rate = float(root.get('line-rate', '0')) * 100
            threshold = 85.0
            print(f"Line coverage: {rate:.2f}% (threshold {threshold}%)")
            if rate < threshold:
                print("::error::Coverage below threshold")
                sys.exit(1)
          PY

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: true
          verbose: true

      - name: Build wheel
        run: |
          python -m build --wheel

      - name: Security audit (pip-audit)
        run: |
          pip-audit -r requirements.txt || true

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: warn

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-wheel
          path: dist/*.whl
          if-no-files-found: warn
