name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build tooling
        run: |
          pip install --upgrade pip
          pip install build

      - name: Build distribution
        run: |
          python -m build

      - name: Extract version
        id: version
        run: echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Generate release notes snippet
        id: notes
        run: |
          ver=${GITHUB_REF_NAME}
          awk -v ver="${ver#v}" '/^## \[/{if(found)exit} $0 ~ "^## \["ver"\]"{found=1;next} found' CHANGELOG.md > RELEASE_NOTES_SECTION.md || echo "(No matching changelog section found)" > RELEASE_NOTES_SECTION.md
          echo 'notes<<EOF' >> $GITHUB_OUTPUT
          cat RELEASE_NOTES_SECTION.md >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            ${{ steps.notes.outputs.notes }}

            Full changelog: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      - name: Publish to PyPI
        # Requires repository secret PYPI_API_TOKEN (an API token from PyPI)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true
          print-hash: true

      # Optional future steps: publish to PyPI, build/push container image
